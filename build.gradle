plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://maven.fabricmc.net/' }
	maven { url "https://maven.shedaniel.me/" }
	maven {
		name "CottonMC"
		url "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		name 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
	maven {
		name "KosmX's maven"
		url 'https://maven.kosmx.dev/'
	}

	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.azuredoom.com/mods' }
	maven {
		name "TerraformersMC"
		url "https://maven.terraformersmc.com/"
	}
	maven {
		name 'Modrinth'
		url 'https://api.modrinth.com/maven'
		content {
			includeGroup 'maven.modrinth'
		}
	}
	maven {
		name "Ladysnake Libs"
		url 'https://maven.ladysnake.org/releases'
	}
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {

	modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
	modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	include(implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}"))

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation include("io.github.cottonmc:LibGui:8.1.1+1.20.1")
	modImplementation "software.bernie.geckolib:geckolib-fabric-1.20.1:4.4.2"

	include modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim}")

	modApi("me.shedaniel.cloth:cloth-config-fabric:11.1.136") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.4.1")))


	modImplementation "maven.modrinth:better-combat:1.8.6+1.20.1-fabric"
	modImplementation "maven.modrinth:combat-roll:1.3.3+1.20.1-fabric"

	modImplementation("dev.emi:trinkets:${project.trinkets_version}")
	modImplementation("mod.azure.azurelibarmor:azurelibarmor-fabric-${project.azure_mc_version}:${project.azure_lib_version}")

	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric")
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
	modImplementation("maven.modrinth:runes:${project.runes_version}-fabric")

	modImplementation("maven.modrinth:wizards:${project.wizards_version}")
	include(modImplementation("maven.modrinth:structure-pool-api:${project.structure_pool_api_version}"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}